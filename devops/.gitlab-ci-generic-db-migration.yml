.db_migration_template:
  before_script:
    # Preparing the GCP service account details and connecting to GCP via gcloud
    - echo $GCP_DEPLOYER_SERVICE_ACCOUNT | base64 -d > ${CI_PROJECT_DIR}/gcloud-service-key.json
    - gcloud auth activate-service-account --key-file ${CI_PROJECT_DIR}/gcloud-service-key.json
    - |
      if [ $IS_PRIVATE_CLUSTER == "true" ]; then 
        gcloud container clusters get-credentials --internal-ip ${KUBE_CLUSTER_NAME} --region ${GCP_REGION}
      else
        gcloud container clusters get-credentials ${KUBE_CLUSTER_NAME} --region ${GCP_REGION}
      fi

  script:

    # Getting the latest pod that is deployed from kubernetes API
    - pod=$(kubectl get pod -l app=$APP_NAME --sort-by=.metadata.creationTimestamp -n $KUBE_NAMESPACE -o json | jq -r '.items[-1]  | .metadata.name')
    
    # Executing migration command inside the pod
    - echo "Running migration inside pod $pod"
    - if [ ! -z "$pod" ]; then kubectl exec $pod -n $KUBE_NAMESPACE -- bash -c "$DB_MIGRATION_SCRIPT"; fi
    - echo "Completed running migration inside pod $pod"
